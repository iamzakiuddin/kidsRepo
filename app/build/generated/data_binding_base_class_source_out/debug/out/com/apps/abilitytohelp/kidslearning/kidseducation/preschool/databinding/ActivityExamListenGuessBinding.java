// Generated by view binder compiler. Do not edit!
package com.apps.abilitytohelp.kidslearning.kidseducation.preschool.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apps.abilitytohelp.kidslearning.kidseducation.preschool.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExamListenGuessBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout backBtn;

  @NonNull
  public final FrameLayout flBootom;

  @NonNull
  public final ImageView iVQuestion;

  @NonNull
  public final ImageView imgBackButton;

  @NonNull
  public final ImageView imgBtnNext;

  @NonNull
  public final ImageView imgBtnPrev;

  @NonNull
  public final RelativeLayout llAdView;

  @NonNull
  public final LinearLayout llAdViewFacebook;

  @NonNull
  public final RelativeLayout llQuestion;

  @NonNull
  public final RelativeLayout rltRecycle;

  @NonNull
  public final RelativeLayout rltTop;

  @NonNull
  public final RecyclerView rvExam;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView txtTitleSubHome;

  private ActivityExamListenGuessBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout backBtn, @NonNull FrameLayout flBootom, @NonNull ImageView iVQuestion,
      @NonNull ImageView imgBackButton, @NonNull ImageView imgBtnNext,
      @NonNull ImageView imgBtnPrev, @NonNull RelativeLayout llAdView,
      @NonNull LinearLayout llAdViewFacebook, @NonNull RelativeLayout llQuestion,
      @NonNull RelativeLayout rltRecycle, @NonNull RelativeLayout rltTop,
      @NonNull RecyclerView rvExam, @NonNull TextView tvName, @NonNull TextView txtTitleSubHome) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.flBootom = flBootom;
    this.iVQuestion = iVQuestion;
    this.imgBackButton = imgBackButton;
    this.imgBtnNext = imgBtnNext;
    this.imgBtnPrev = imgBtnPrev;
    this.llAdView = llAdView;
    this.llAdViewFacebook = llAdViewFacebook;
    this.llQuestion = llQuestion;
    this.rltRecycle = rltRecycle;
    this.rltTop = rltTop;
    this.rvExam = rvExam;
    this.tvName = tvName;
    this.txtTitleSubHome = txtTitleSubHome;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExamListenGuessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExamListenGuessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exam_listen_guess, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExamListenGuessBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backBtn;
      LinearLayout backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.flBootom;
      FrameLayout flBootom = ViewBindings.findChildViewById(rootView, id);
      if (flBootom == null) {
        break missingId;
      }

      id = R.id.iVQuestion;
      ImageView iVQuestion = ViewBindings.findChildViewById(rootView, id);
      if (iVQuestion == null) {
        break missingId;
      }

      id = R.id.imgBackButton;
      ImageView imgBackButton = ViewBindings.findChildViewById(rootView, id);
      if (imgBackButton == null) {
        break missingId;
      }

      id = R.id.imgBtnNext;
      ImageView imgBtnNext = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnNext == null) {
        break missingId;
      }

      id = R.id.imgBtnPrev;
      ImageView imgBtnPrev = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnPrev == null) {
        break missingId;
      }

      id = R.id.llAdView;
      RelativeLayout llAdView = ViewBindings.findChildViewById(rootView, id);
      if (llAdView == null) {
        break missingId;
      }

      id = R.id.llAdViewFacebook;
      LinearLayout llAdViewFacebook = ViewBindings.findChildViewById(rootView, id);
      if (llAdViewFacebook == null) {
        break missingId;
      }

      id = R.id.llQuestion;
      RelativeLayout llQuestion = ViewBindings.findChildViewById(rootView, id);
      if (llQuestion == null) {
        break missingId;
      }

      id = R.id.rltRecycle;
      RelativeLayout rltRecycle = ViewBindings.findChildViewById(rootView, id);
      if (rltRecycle == null) {
        break missingId;
      }

      id = R.id.rltTop;
      RelativeLayout rltTop = ViewBindings.findChildViewById(rootView, id);
      if (rltTop == null) {
        break missingId;
      }

      id = R.id.rv_exam;
      RecyclerView rvExam = ViewBindings.findChildViewById(rootView, id);
      if (rvExam == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.txtTitleSubHome;
      TextView txtTitleSubHome = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleSubHome == null) {
        break missingId;
      }

      return new ActivityExamListenGuessBinding((LinearLayout) rootView, backBtn, flBootom,
          iVQuestion, imgBackButton, imgBtnNext, imgBtnPrev, llAdView, llAdViewFacebook, llQuestion,
          rltRecycle, rltTop, rvExam, tvName, txtTitleSubHome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
