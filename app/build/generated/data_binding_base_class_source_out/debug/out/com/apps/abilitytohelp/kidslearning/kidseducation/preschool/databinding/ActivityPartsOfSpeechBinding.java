// Generated by view binder compiler. Do not edit!
package com.apps.abilitytohelp.kidslearning.kidseducation.preschool.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apps.abilitytohelp.kidslearning.kidseducation.preschool.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPartsOfSpeechBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView adjective;

  @NonNull
  public final TextView adverb;

  @NonNull
  public final LinearLayout antonymsSynonymsContainer;

  @NonNull
  public final LinearLayout backBtn;

  @NonNull
  public final ImageView imgBackButton;

  @NonNull
  public final RelativeLayout llAdView;

  @NonNull
  public final LinearLayout llAdViewFacebook;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final TextView partofspeech;

  @NonNull
  public final RelativeLayout rltTop;

  @NonNull
  public final Button searchBtn;

  @NonNull
  public final EditText searchField;

  @NonNull
  public final TextView txtTitleSubHome;

  @NonNull
  public final TextView verb;

  @NonNull
  public final TextView word;

  private ActivityPartsOfSpeechBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView adjective, @NonNull TextView adverb,
      @NonNull LinearLayout antonymsSynonymsContainer, @NonNull LinearLayout backBtn,
      @NonNull ImageView imgBackButton, @NonNull RelativeLayout llAdView,
      @NonNull LinearLayout llAdViewFacebook, @NonNull ProgressBar loading,
      @NonNull TextView partofspeech, @NonNull RelativeLayout rltTop, @NonNull Button searchBtn,
      @NonNull EditText searchField, @NonNull TextView txtTitleSubHome, @NonNull TextView verb,
      @NonNull TextView word) {
    this.rootView = rootView;
    this.adjective = adjective;
    this.adverb = adverb;
    this.antonymsSynonymsContainer = antonymsSynonymsContainer;
    this.backBtn = backBtn;
    this.imgBackButton = imgBackButton;
    this.llAdView = llAdView;
    this.llAdViewFacebook = llAdViewFacebook;
    this.loading = loading;
    this.partofspeech = partofspeech;
    this.rltTop = rltTop;
    this.searchBtn = searchBtn;
    this.searchField = searchField;
    this.txtTitleSubHome = txtTitleSubHome;
    this.verb = verb;
    this.word = word;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPartsOfSpeechBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPartsOfSpeechBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_parts_of_speech, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPartsOfSpeechBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adjective;
      TextView adjective = ViewBindings.findChildViewById(rootView, id);
      if (adjective == null) {
        break missingId;
      }

      id = R.id.adverb;
      TextView adverb = ViewBindings.findChildViewById(rootView, id);
      if (adverb == null) {
        break missingId;
      }

      id = R.id.antonymsSynonymsContainer;
      LinearLayout antonymsSynonymsContainer = ViewBindings.findChildViewById(rootView, id);
      if (antonymsSynonymsContainer == null) {
        break missingId;
      }

      id = R.id.backBtn;
      LinearLayout backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.imgBackButton;
      ImageView imgBackButton = ViewBindings.findChildViewById(rootView, id);
      if (imgBackButton == null) {
        break missingId;
      }

      id = R.id.llAdView;
      RelativeLayout llAdView = ViewBindings.findChildViewById(rootView, id);
      if (llAdView == null) {
        break missingId;
      }

      id = R.id.llAdViewFacebook;
      LinearLayout llAdViewFacebook = ViewBindings.findChildViewById(rootView, id);
      if (llAdViewFacebook == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.partofspeech;
      TextView partofspeech = ViewBindings.findChildViewById(rootView, id);
      if (partofspeech == null) {
        break missingId;
      }

      id = R.id.rltTop;
      RelativeLayout rltTop = ViewBindings.findChildViewById(rootView, id);
      if (rltTop == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      Button searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.searchField;
      EditText searchField = ViewBindings.findChildViewById(rootView, id);
      if (searchField == null) {
        break missingId;
      }

      id = R.id.txtTitleSubHome;
      TextView txtTitleSubHome = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleSubHome == null) {
        break missingId;
      }

      id = R.id.verb;
      TextView verb = ViewBindings.findChildViewById(rootView, id);
      if (verb == null) {
        break missingId;
      }

      id = R.id.word;
      TextView word = ViewBindings.findChildViewById(rootView, id);
      if (word == null) {
        break missingId;
      }

      return new ActivityPartsOfSpeechBinding((ConstraintLayout) rootView, adjective, adverb,
          antonymsSynonymsContainer, backBtn, imgBackButton, llAdView, llAdViewFacebook, loading,
          partofspeech, rltTop, searchBtn, searchField, txtTitleSubHome, verb, word);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
