// Generated by view binder compiler. Do not edit!
package com.apps.abilitytohelp.kidslearning.kidseducation.preschool.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apps.abilitytohelp.kidslearning.kidseducation.preschool.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GrammarItemLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView category;

  @NonNull
  public final TextView categoryType;

  @NonNull
  public final TextView context;

  @NonNull
  public final TextView contextData;

  @NonNull
  public final TextView message;

  @NonNull
  public final TextView messageData;

  @NonNull
  public final TextView replacement;

  @NonNull
  public final TextView replacementData;

  private GrammarItemLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView category,
      @NonNull TextView categoryType, @NonNull TextView context, @NonNull TextView contextData,
      @NonNull TextView message, @NonNull TextView messageData, @NonNull TextView replacement,
      @NonNull TextView replacementData) {
    this.rootView = rootView;
    this.category = category;
    this.categoryType = categoryType;
    this.context = context;
    this.contextData = contextData;
    this.message = message;
    this.messageData = messageData;
    this.replacement = replacement;
    this.replacementData = replacementData;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GrammarItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GrammarItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.grammar_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GrammarItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.categoryType;
      TextView categoryType = ViewBindings.findChildViewById(rootView, id);
      if (categoryType == null) {
        break missingId;
      }

      id = R.id.context;
      TextView context = ViewBindings.findChildViewById(rootView, id);
      if (context == null) {
        break missingId;
      }

      id = R.id.contextData;
      TextView contextData = ViewBindings.findChildViewById(rootView, id);
      if (contextData == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.messageData;
      TextView messageData = ViewBindings.findChildViewById(rootView, id);
      if (messageData == null) {
        break missingId;
      }

      id = R.id.replacement;
      TextView replacement = ViewBindings.findChildViewById(rootView, id);
      if (replacement == null) {
        break missingId;
      }

      id = R.id.replacementData;
      TextView replacementData = ViewBindings.findChildViewById(rootView, id);
      if (replacementData == null) {
        break missingId;
      }

      return new GrammarItemLayoutBinding((LinearLayout) rootView, category, categoryType, context,
          contextData, message, messageData, replacement, replacementData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
