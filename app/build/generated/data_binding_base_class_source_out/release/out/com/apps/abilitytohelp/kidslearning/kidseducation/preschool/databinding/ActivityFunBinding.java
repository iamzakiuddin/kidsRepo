// Generated by view binder compiler. Do not edit!
package com.apps.abilitytohelp.kidslearning.kidseducation.preschool.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apps.abilitytohelp.kidslearning.kidseducation.preschool.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFunBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button antonymsSynonyms;

  @NonNull
  public final Button askMeAnything;

  @NonNull
  public final ImageView close;

  @NonNull
  public final Button grammarGenius;

  @NonNull
  public final Button learningPeriodicTable;

  @NonNull
  public final RelativeLayout llAdView;

  @NonNull
  public final LinearLayout llAdViewFacebook;

  @NonNull
  public final Button machineLearning;

  @NonNull
  public final LinearLayout options;

  @NonNull
  public final Button riddleBtn;

  @NonNull
  public final Button speechFinder;

  @NonNull
  public final Button synonyms;

  @NonNull
  public final Button wordImage;

  private ActivityFunBinding(@NonNull ConstraintLayout rootView, @NonNull Button antonymsSynonyms,
      @NonNull Button askMeAnything, @NonNull ImageView close, @NonNull Button grammarGenius,
      @NonNull Button learningPeriodicTable, @NonNull RelativeLayout llAdView,
      @NonNull LinearLayout llAdViewFacebook, @NonNull Button machineLearning,
      @NonNull LinearLayout options, @NonNull Button riddleBtn, @NonNull Button speechFinder,
      @NonNull Button synonyms, @NonNull Button wordImage) {
    this.rootView = rootView;
    this.antonymsSynonyms = antonymsSynonyms;
    this.askMeAnything = askMeAnything;
    this.close = close;
    this.grammarGenius = grammarGenius;
    this.learningPeriodicTable = learningPeriodicTable;
    this.llAdView = llAdView;
    this.llAdViewFacebook = llAdViewFacebook;
    this.machineLearning = machineLearning;
    this.options = options;
    this.riddleBtn = riddleBtn;
    this.speechFinder = speechFinder;
    this.synonyms = synonyms;
    this.wordImage = wordImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFunBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFunBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fun, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFunBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.antonyms_synonyms;
      Button antonymsSynonyms = ViewBindings.findChildViewById(rootView, id);
      if (antonymsSynonyms == null) {
        break missingId;
      }

      id = R.id.ask_me_anything;
      Button askMeAnything = ViewBindings.findChildViewById(rootView, id);
      if (askMeAnything == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.grammar_genius;
      Button grammarGenius = ViewBindings.findChildViewById(rootView, id);
      if (grammarGenius == null) {
        break missingId;
      }

      id = R.id.learning_periodic_table;
      Button learningPeriodicTable = ViewBindings.findChildViewById(rootView, id);
      if (learningPeriodicTable == null) {
        break missingId;
      }

      id = R.id.llAdView;
      RelativeLayout llAdView = ViewBindings.findChildViewById(rootView, id);
      if (llAdView == null) {
        break missingId;
      }

      id = R.id.llAdViewFacebook;
      LinearLayout llAdViewFacebook = ViewBindings.findChildViewById(rootView, id);
      if (llAdViewFacebook == null) {
        break missingId;
      }

      id = R.id.machine_learning;
      Button machineLearning = ViewBindings.findChildViewById(rootView, id);
      if (machineLearning == null) {
        break missingId;
      }

      id = R.id.options;
      LinearLayout options = ViewBindings.findChildViewById(rootView, id);
      if (options == null) {
        break missingId;
      }

      id = R.id.riddleBtn;
      Button riddleBtn = ViewBindings.findChildViewById(rootView, id);
      if (riddleBtn == null) {
        break missingId;
      }

      id = R.id.speech_finder;
      Button speechFinder = ViewBindings.findChildViewById(rootView, id);
      if (speechFinder == null) {
        break missingId;
      }

      id = R.id.synonyms;
      Button synonyms = ViewBindings.findChildViewById(rootView, id);
      if (synonyms == null) {
        break missingId;
      }

      id = R.id.word_image;
      Button wordImage = ViewBindings.findChildViewById(rootView, id);
      if (wordImage == null) {
        break missingId;
      }

      return new ActivityFunBinding((ConstraintLayout) rootView, antonymsSynonyms, askMeAnything,
          close, grammarGenius, learningPeriodicTable, llAdView, llAdViewFacebook, machineLearning,
          options, riddleBtn, speechFinder, synonyms, wordImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
