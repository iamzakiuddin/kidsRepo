// Generated by view binder compiler. Do not edit!
package com.kidslearning.kidsplay.kidsgames.kidseducation.preschool.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kidslearning.kidsplay.kidsgames.kidseducation.preschool.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityElementDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView affinity;

  @NonNull
  public final TextView atomicMass;

  @NonNull
  public final TextView atomicNumber;

  @NonNull
  public final TextView atomicRadius;

  @NonNull
  public final ImageView back;

  @NonNull
  public final TextView block;

  @NonNull
  public final TextView bondingType;

  @NonNull
  public final TextView crystalStructure;

  @NonNull
  public final TextView density;

  @NonNull
  public final TextView electronicConfiguration;

  @NonNull
  public final TextView elementName;

  @NonNull
  public final TextView group;

  @NonNull
  public final TextView groupBlock;

  @NonNull
  public final TextView histroy;

  @NonNull
  public final TextView ionRadius;

  @NonNull
  public final TextView ionizationEnergy;

  @NonNull
  public final TextView isotopes;

  @NonNull
  public final TextView magneticOrdering;

  @NonNull
  public final TextView meltingPoints;

  @NonNull
  public final TextView minerals;

  @NonNull
  public final TextView molarHeatCapacity;

  @NonNull
  public final TextView negativity;

  @NonNull
  public final TextView oxidationStates;

  @NonNull
  public final TextView period;

  @NonNull
  public final RelativeLayout rltTop;

  @NonNull
  public final TextView speedOfSound;

  @NonNull
  public final TextView standardState;

  @NonNull
  public final TextView txtTitleSubHome;

  @NonNull
  public final TextView vanDerWaalsRadius;

  @NonNull
  public final TextView yearOfDiscovers;

  private ActivityElementDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView affinity, @NonNull TextView atomicMass, @NonNull TextView atomicNumber,
      @NonNull TextView atomicRadius, @NonNull ImageView back, @NonNull TextView block,
      @NonNull TextView bondingType, @NonNull TextView crystalStructure, @NonNull TextView density,
      @NonNull TextView electronicConfiguration, @NonNull TextView elementName,
      @NonNull TextView group, @NonNull TextView groupBlock, @NonNull TextView histroy,
      @NonNull TextView ionRadius, @NonNull TextView ionizationEnergy, @NonNull TextView isotopes,
      @NonNull TextView magneticOrdering, @NonNull TextView meltingPoints,
      @NonNull TextView minerals, @NonNull TextView molarHeatCapacity, @NonNull TextView negativity,
      @NonNull TextView oxidationStates, @NonNull TextView period, @NonNull RelativeLayout rltTop,
      @NonNull TextView speedOfSound, @NonNull TextView standardState,
      @NonNull TextView txtTitleSubHome, @NonNull TextView vanDerWaalsRadius,
      @NonNull TextView yearOfDiscovers) {
    this.rootView = rootView;
    this.affinity = affinity;
    this.atomicMass = atomicMass;
    this.atomicNumber = atomicNumber;
    this.atomicRadius = atomicRadius;
    this.back = back;
    this.block = block;
    this.bondingType = bondingType;
    this.crystalStructure = crystalStructure;
    this.density = density;
    this.electronicConfiguration = electronicConfiguration;
    this.elementName = elementName;
    this.group = group;
    this.groupBlock = groupBlock;
    this.histroy = histroy;
    this.ionRadius = ionRadius;
    this.ionizationEnergy = ionizationEnergy;
    this.isotopes = isotopes;
    this.magneticOrdering = magneticOrdering;
    this.meltingPoints = meltingPoints;
    this.minerals = minerals;
    this.molarHeatCapacity = molarHeatCapacity;
    this.negativity = negativity;
    this.oxidationStates = oxidationStates;
    this.period = period;
    this.rltTop = rltTop;
    this.speedOfSound = speedOfSound;
    this.standardState = standardState;
    this.txtTitleSubHome = txtTitleSubHome;
    this.vanDerWaalsRadius = vanDerWaalsRadius;
    this.yearOfDiscovers = yearOfDiscovers;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityElementDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityElementDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_element_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityElementDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.affinity;
      TextView affinity = ViewBindings.findChildViewById(rootView, id);
      if (affinity == null) {
        break missingId;
      }

      id = R.id.atomicMass;
      TextView atomicMass = ViewBindings.findChildViewById(rootView, id);
      if (atomicMass == null) {
        break missingId;
      }

      id = R.id.atomicNumber;
      TextView atomicNumber = ViewBindings.findChildViewById(rootView, id);
      if (atomicNumber == null) {
        break missingId;
      }

      id = R.id.atomicRadius;
      TextView atomicRadius = ViewBindings.findChildViewById(rootView, id);
      if (atomicRadius == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.block;
      TextView block = ViewBindings.findChildViewById(rootView, id);
      if (block == null) {
        break missingId;
      }

      id = R.id.bondingType;
      TextView bondingType = ViewBindings.findChildViewById(rootView, id);
      if (bondingType == null) {
        break missingId;
      }

      id = R.id.crystalStructure;
      TextView crystalStructure = ViewBindings.findChildViewById(rootView, id);
      if (crystalStructure == null) {
        break missingId;
      }

      id = R.id.density;
      TextView density = ViewBindings.findChildViewById(rootView, id);
      if (density == null) {
        break missingId;
      }

      id = R.id.electronicConfiguration;
      TextView electronicConfiguration = ViewBindings.findChildViewById(rootView, id);
      if (electronicConfiguration == null) {
        break missingId;
      }

      id = R.id.elementName;
      TextView elementName = ViewBindings.findChildViewById(rootView, id);
      if (elementName == null) {
        break missingId;
      }

      id = R.id.group;
      TextView group = ViewBindings.findChildViewById(rootView, id);
      if (group == null) {
        break missingId;
      }

      id = R.id.groupBlock;
      TextView groupBlock = ViewBindings.findChildViewById(rootView, id);
      if (groupBlock == null) {
        break missingId;
      }

      id = R.id.histroy;
      TextView histroy = ViewBindings.findChildViewById(rootView, id);
      if (histroy == null) {
        break missingId;
      }

      id = R.id.ionRadius;
      TextView ionRadius = ViewBindings.findChildViewById(rootView, id);
      if (ionRadius == null) {
        break missingId;
      }

      id = R.id.ionizationEnergy;
      TextView ionizationEnergy = ViewBindings.findChildViewById(rootView, id);
      if (ionizationEnergy == null) {
        break missingId;
      }

      id = R.id.isotopes;
      TextView isotopes = ViewBindings.findChildViewById(rootView, id);
      if (isotopes == null) {
        break missingId;
      }

      id = R.id.magneticOrdering;
      TextView magneticOrdering = ViewBindings.findChildViewById(rootView, id);
      if (magneticOrdering == null) {
        break missingId;
      }

      id = R.id.meltingPoints;
      TextView meltingPoints = ViewBindings.findChildViewById(rootView, id);
      if (meltingPoints == null) {
        break missingId;
      }

      id = R.id.minerals;
      TextView minerals = ViewBindings.findChildViewById(rootView, id);
      if (minerals == null) {
        break missingId;
      }

      id = R.id.molarHeatCapacity;
      TextView molarHeatCapacity = ViewBindings.findChildViewById(rootView, id);
      if (molarHeatCapacity == null) {
        break missingId;
      }

      id = R.id.negativity;
      TextView negativity = ViewBindings.findChildViewById(rootView, id);
      if (negativity == null) {
        break missingId;
      }

      id = R.id.oxidationStates;
      TextView oxidationStates = ViewBindings.findChildViewById(rootView, id);
      if (oxidationStates == null) {
        break missingId;
      }

      id = R.id.period;
      TextView period = ViewBindings.findChildViewById(rootView, id);
      if (period == null) {
        break missingId;
      }

      id = R.id.rltTop;
      RelativeLayout rltTop = ViewBindings.findChildViewById(rootView, id);
      if (rltTop == null) {
        break missingId;
      }

      id = R.id.speedOfSound;
      TextView speedOfSound = ViewBindings.findChildViewById(rootView, id);
      if (speedOfSound == null) {
        break missingId;
      }

      id = R.id.standardState;
      TextView standardState = ViewBindings.findChildViewById(rootView, id);
      if (standardState == null) {
        break missingId;
      }

      id = R.id.txtTitleSubHome;
      TextView txtTitleSubHome = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleSubHome == null) {
        break missingId;
      }

      id = R.id.vanDerWaalsRadius;
      TextView vanDerWaalsRadius = ViewBindings.findChildViewById(rootView, id);
      if (vanDerWaalsRadius == null) {
        break missingId;
      }

      id = R.id.yearOfDiscovers;
      TextView yearOfDiscovers = ViewBindings.findChildViewById(rootView, id);
      if (yearOfDiscovers == null) {
        break missingId;
      }

      return new ActivityElementDetailBinding((ConstraintLayout) rootView, affinity, atomicMass,
          atomicNumber, atomicRadius, back, block, bondingType, crystalStructure, density,
          electronicConfiguration, elementName, group, groupBlock, histroy, ionRadius,
          ionizationEnergy, isotopes, magneticOrdering, meltingPoints, minerals, molarHeatCapacity,
          negativity, oxidationStates, period, rltTop, speedOfSound, standardState, txtTitleSubHome,
          vanDerWaalsRadius, yearOfDiscovers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
